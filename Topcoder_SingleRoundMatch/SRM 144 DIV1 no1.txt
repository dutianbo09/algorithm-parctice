#include<vector>
#include<iostream>
#include<string>
using namespace std;
class BinaryCode
{
	public:
	vector<string> decode(string s)
	{
		string v1;
		string v2;
		vector<string> v;
		int i;
		//第一个数为0
		vector<int> c(s.length());
		bool flag1=true;
		c[0]=0;
		c[1]=s[0]-48-c[0];
		for( i=2;i<s.length();i++)
			{
				c[i]=s[i-1]-48-c[i-1]-c[i-2];
			}
		if(c[s.length()-2]+c[s.length()-1] != s[s.length()-1]-48)
			flag1=false;
		for( i=0;i<s.length();i++)
			if((c[i]!=0) && (c[i]!=1))
				flag1=false;

		//第二个数为1
		vector<int> d(s.length());
		bool flag2=true;
		d[0]=1;
		d[1]=s[0]-48-d[0];
		for( i=2;i<s.length();i++)
			{
				d[i]=s[i-1]-48-d[i-1]-d[i-2];
			}
		if(d[s.length()-2]+d[s.length()-1] != s[s.length()-1]-48)
			flag2=false;
		for( i=0;i<s.length();i++)
			if((d[i]!=0) && (d[i]!=1))
				flag2=false;
		// { "NONE",  "11001" }输出范例
		
		if(flag1==true)
			{
			v1="";
			for(i=0;i<s.length();i++)
				{
					if(c[i]==0)
					v1+="0";
					else
					v1+="1";
				};
			}
		if(flag1==false)
			v1="NONE";

		

		if(flag2==true)
			{
			v2="";
			for(i=0;i<s.length();i++)
				{
					if(d[i]==0)
					v2+="0";
					else
					v2+="1";
				};
			}
		if(flag2==false)
			v2="NONE";

		v.push_back(v1);
		v.push_back(v2);
		return v;
	}
};